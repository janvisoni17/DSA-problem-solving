https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

vector <int> bottomView(Node *root) {
        vector<int> ans;
        map<int,int> mpp;
        queue<pair<Node*,int>> q;
        
        q.push({root,0});
        
        while(!q.empty())
        {
            auto it=q.front();
            q.pop();
            Node* node=it.first;
            int line=it.second;
            
            mpp[line]=node->data;
            
            if(node->left)
                q.push({node->left,line-1});
            if(node->right)
                q.push({node->right,line+1});
        }
        
        for(auto it:mpp)
        {
            ans.push_back(it.second);
        }
        return ans;
    }


https://www.codingninjas.com/codestudio/problems/893110?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=1
SAME AS ABOVE GFG

vector<int> bottomView(BinaryTreeNode<int> * root){

        vector<int> ans;
        map<int,int> mpp;
        queue<pair<BinaryTreeNode<int>*,int>> q;
        
        q.push({root,0});
        
        while(!q.empty())
        {
            auto it=q.front();
            q.pop();
            BinaryTreeNode<int>* node=it.first;
            int line=it.second;
            
            mpp[line]=node->data;
            
            if(node->left)
                q.push({node->left,line-1});
            if(node->right)
                q.push({node->right,line+1});
        }
        
        for(auto it:mpp)
        {
            ans.push_back(it.second);
        }
        return ans;
}

